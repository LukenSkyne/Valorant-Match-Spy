name: AutoRelease

# run workflow on new version tag creation
on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  # build the project required for release
  build:
    name: Build
    runs-on: windows-latest
    
    strategy:
      matrix:
        node-version: [16.x]
    
    steps:
    #######
    - name: Checking out repository
      uses: actions/checkout@v3
    
    #######
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18
    
    #######
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: ./frontend/package-lock.json
    
    #######
    - name: Install Wails CLI
      run: go install github.com/wailsapp/wails/v2/cmd/wails@latest
    
    #######
    - name: Build Wails app
      run: wails build
    
    #######
    - name: Move Binary to main folder
      run: move ".\build\bin\Valorant Match Spy.exe" ".\Valorant-Match-Spy.exe"
    
    #######
    - name: Uploading Valorant-Match-Spy to Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Valorant-Match-Spy
        path: Valorant-Match-Spy.exe
  
  # create a new release with the built binary
  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    #######
    - name: Checking out repository
      uses: actions/checkout@v2
    
    #######
    - name: Extracting version from references
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
    
    #######
    - name: Downloading Valorant-Match-Spy from Artifacts
      uses: actions/download-artifact@v2
      with:
        name: Valorant-Match-Spy
    
    #######
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: false
        prerelease: false
    
    #######
    - name: Upload Release Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./Valorant-Match-Spy.exe
        asset_name: Valorant-Match-Spy.exe
        asset_content_type: application/exe
